// Core variables and mixins
@import "variables.less";
@import "mixins.less";

.form-inline {
    .form-group {
        display: inline;
        margin-bottom: 0;
        vertical-align: middle;
    }
    // In navbar-form, allow folks to *not* use `.form-group`
    .form-control {
        display: inline;
        width: auto; // Prevent labels from stacking above inputs in `.form-group`
        vertical-align: middle;
    }
    // Make static controls behave like regular ones
    .form-control-static {
        display: inline;
    }

    .input-group {
        display: inline-table;
        vertical-align: middle;

        .input-group-addon,
        .input-group-btn,
        .form-control {
            width: auto;
        }
    }
    // Input groups need that 100% width though
    .input-group > .form-control {
        width: 100%;
    }

    .control-label {
        margin-bottom: 0;
        vertical-align: middle;
    }
    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .radio,
    .checkbox {
        display: inline;
        margin-top: 0;
        margin-bottom: 0;
        vertical-align: middle;

        label {
            padding-left: 0;
        }
    }

    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
        position: relative;
        margin-left: 0;
    }
    // Re-override the feedback icon.
    .has-feedback .form-control-feedback {
        top: 0;
    }

    .has-tip .form-control-tip {
        top: 0;
    }
}

.form-horizontal {
    .control-label {
        text-align: right;
        margin-bottom: 0;
        padding-top: (@padding-base-vertical + 1); // Default padding plus a border
    }

    .form-group-lg {
        .control-label {
            padding-top: ((@padding-large-vertical * @line-height-large) + 1);
        }
    }

    .form-group-sm {
        .control-label {
            padding-top: (@padding-small-vertical + 1);
        }
    }
}

.nav-justified {
    > li {
        display: table-cell;
        width: 1%;

        > a {
            margin-bottom: 0;
        }
    }

    > li > a {
        border-bottom: 1px solid @nav-tabs-justified-link-border-color;
        border-radius: @border-radius-base @border-radius-base 0 0;
    }

    > .active > a,
    > .active > a:hover,
    > .active > a:focus {
        border-bottom-color: @nav-tabs-justified-active-link-border-color !important;
    }
}

//.navbar patch
.navbar-header {
    float: left;
}

.navbar-collapse.collapse {
    display: block !important;
    height: auto !important;
    padding-bottom: 0px;
    overflow: visible !important;
}

.navbar-collapse {
    width: auto;
    border-top: 0px none;
    box-shadow: none;
}

.navbar-left {
    float: left !important;
}

.navbar-form {
    width: auto;
    padding: 0px !important;
	margin: 0px !important;
	.form-group{
		margin-bottom: 0px;
		margin-top: 10px;
		.form-control{
			width: auto;
		}
	}
}

.navbar-right {
    float: right !important;
    margin-right: 0px;
}

.navbar-nav {
    float: left;
    margin: 0px;
}

.navbar-nav > li {
    float: left;
}

.navbar-default .navbar-toggle{
	display: none;
}